package boss.lexicographic;

import java.util.HashSet;

import boss.util.Config;
import plus.data.Book;

/**
 * Words to be removed from the token stream
 * 
 * @author b1074672
 *
 */
public class StopWords {
	public static boolean keep_stopwords = true;
	
	/**
	 * 
	 * @param config_enum from Config.DE_STOP_WORDS, Config.EN_STOP_WORDS, or Config.DD_STOP_WORDS
	 * @return
	 */
	public static HashSet<String> get_stop_words_by_enum(final int config_enum) {
		String[] stop_words = null;
		if(config_enum == Config.DE_STOP_WORDS) {
			stop_words = GERMAN_STOP_WORDS;
		}else if(config_enum == Config.EN_STOP_WORDS) {
			stop_words = ENGLISH_STOPWORDS;
		}else if(config_enum == Config.DD_STOP_WORDS) {
			stop_words = DONG_DENG_STOPWORDS;
		}else{
			System.err.println("StopWords.get_stop_words_by_enum("+config_enum+") unknown config_enum");
			return null;
		}
		final HashSet<String> ret = new HashSet<String>(stop_words.length);
		for(String s : stop_words){
			ret.add(s);
		}
		return ret;
	}
	
	public static HashSet<String> get_stop_words(int language) {
		String[] stop_words;
		if(language == Book.LANGUAGE_LATIN) {
			stop_words = LATIN_STOP_WORDS;
		}else if(language == Book.LANGUAGE_OLD_GREEK) {
			stop_words = GREEK_STOP_WORDS;
		}else if(language == Book.LANGUAGE_GERMAN) {
			stop_words = GERMAN_STOP_WORDS;
		}else if(language == Book.LANGUAGE_ENGLISH) {
			stop_words = DONG_DENG_STOPWORDS;
		}else{
			
			System.err.println("StopWords.get_stop_words(int): Not implemented for "+Book.get_language_string(language));
			//String[] ret = new String[0];
			return new HashSet<String>();//empty
		}
		HashSet<String> ret = new HashSet<String>(stop_words.length);
		for(String s : stop_words){
			ret.add(s);
		}
		return ret;
	}
	
	static String[] LATIN_STOP_WORDS = {
			"ab"
			, "ac"
			, "ad"
			, "adhic"
			, "aliqui"
			, "aliquis"
			, "an"
			, "ante"
			, "apud"
			, "at"
			, "atque"
			, "aut"
			, "autem"
			, "cum"
			, "cur"
			, "de"
			, "deinde"
			, "dum"
			, "ego"
			, "enim"
			, "ergo"
			, "es"
			, "est"
			, "et"
			, "etiam"
			, "etsi"
			, "ex"
			, "fio"
			, "haud"
			, "hic"
			, "iam"
			, "idem"
			, "igitur"
			, "ille"
			, "in"
			, "infra"
			, "inter"
			, "interim"
			, "ipse"
			, "is"
			, "ita"
			, "magis"
			, "modo"
			, "mox"
			, "nam"
			, "ne"
			, "nec"
			, "necque"
			, "neque"
			, "nisi"
			, "non"
			, "nos"
			, "o"
			, "ob"
			, "per"
			, "possum"
			, "post"
			, "pro"
			, "quae"
			, "quam"
			, "quare"
			, "qui"
			, "quia"
			, "quicumque"
			, "quidem"
			, "quilibet"
			, "quis"
			, "quisnam"
			, "quisquam"
			, "quisque"
			, "quisquis"
			, "quo"
			, "quoniam"
			, "sed"
			, "si"
			, "sic"
			, "sive"
			, "sub"
			, "sui"
			, "sum"
			, "super"
			, "suus"
			, "tam"
			, "tamen"
			, "trans"
			, "tu"
			, "tum"
			, "ubi"
			, "uel"
			, "uero"
			, "unus"
			, "ut"
	};
	static String[] GREEK_STOP_WORDS = {
			"Î®"
			, "á¼‘Î±Ï…Ï„Î¿á¿¦"
			, "á¼„Î½"
			, "á¼€Î»Î»'"
			, "á¼€Î»Î»Î¬"
			, "á¼„Î»Î»Î¿Ï‚"
			, "á¼€Ï€ÏŒ"
			, "á¼„Ï?Î±"
			, "Î±á½?Ï„ÏŒÏ‚"
			, "Î´'"
			, "Î´Î­"
			, "Î´Î®"
			, "Î´Î¹Î¬"
			, "Î´Î±Î¯"
			, "Î´Î±Î¯Ï‚"
			, "á¼”Ï„Î¹"
			, "á¼?Î³ÏŽ"
			, "á¼?Îº"
			, "á¼?Î¼ÏŒÏ‚"
			, "á¼?Î½"
			, "á¼?Ï€Î¯"
			, "Îµá¼°"
			, "Îµá¼°Î¼Î¯"
			, "Îµá¼´Î¼Î¹"
			, "Îµá¼°Ï‚"
			, "Î³Î¬Ï?"
			, "Î³Îµ"
			, "Î³Î±"
			, "á¼¡"
			, "á¼¤"
			, "ÎºÎ±Î¯"
			, "ÎºÎ±Ï„Î¬"
			, "Î¼Î­Î½"
			, "Î¼ÎµÏ„Î¬"
			, "Î¼Î®"
			, "á½?"
			, "á½…Î´Îµ"
			, "á½…Ï‚"
			, "á½…ÏƒÏ„Î¹Ï‚"
			, "á½…Ï„Î¹"
			, "Î¿á½•Ï„Ï‰Ï‚"
			, "Î¿á½—Ï„Î¿Ï‚"
			, "Î¿á½”Ï„Îµ"
			, "Î¿á½–Î½"
			, "Î¿á½?Î´ÎµÎ¯Ï‚"
			, "Î¿á¼±"
			, "Î¿á½?"
			, "Î¿á½?Î´Î­"
			, "Î¿á½?Îº"
			, "Ï€ÎµÏ?Î¯"
			, "Ï€Ï?ÏŒÏ‚"
			, "ÏƒÏ?"
			, "ÏƒÏ?Î½"
			, "Ï„Î¬"
			, "Ï„Îµ"
			, "Ï„Î®Î½"
			, "Ï„á¿†Ï‚"
			, "Ï„á¿‡"
			, "Ï„Î¹"
			, "Ï„Î¯"
			, "Ï„Î¹Ï‚"
			, "Ï„Î¯Ï‚"
			, "Ï„ÏŒ"
			, "Ï„Î¿Î¯"
			, "Ï„Î¿Î¹Î¿á¿¦Ï„Î¿Ï‚"
			, "Ï„ÏŒÎ½"
			, "Ï„Î¿Ï?Ï‚"
			, "Ï„Î¿á¿¦"
			, "Ï„á¿¶Î½"
			, "Ï„á¿·"
			, "á½‘Î¼ÏŒÏ‚"
			, "á½‘Ï€Î­Ï?"
			, "á½‘Ï€ÏŒ"
			, "á½¡Ï‚"
			, "á½¦"
			, "á½¥ÏƒÏ„Îµ"
			, "á¼?Î¬Î½"
			, "Ï€Î±Ï?Î¬"
			, "ÏƒÏŒÏ‚"
	};
	static String[] GERMAN_STOP_WORDS = {
			"aber"
			, "als"
			, "am"
			, "an"
			, "auch"
			, "auf"
			, "aus"
			, "bei"
			, "bin"
			, "bis"
			, "bist"
			, "da"
			, "dadurch"
			, "daher"
			, "darum"
			, "das"
			, "daÃŸ"
			, "dass"
			, "dein"
			, "deine"
			, "dem"
			, "den"
			, "der"
			, "des"
			, "dessen"
			, "deshalb"
			, "die"
			, "dies"
			, "dieser"
			, "dieses"
			, "doch"
			, "dort"
			, "du"
			, "durch"
			, "ein"
			, "eine"
			, "einem"
			, "einen"
			, "einer"
			, "eines"
			, "er"
			, "es"
			, "euer"
			, "eure"
			, "fÃ¼r"
			, "hatte"
			, "hatten"
			, "hattest"
			, "hattet"
			, "hier"
			, "hinter"
			, "ich"
			, "ihr"
			, "ihre"
			, "im"
			, "in"
			, "ist"
			, "ja"
			, "jede"
			, "jedem"
			, "jeden"
			, "jeder"
			, "jedes"
			, "jener"
			, "jenes"
			, "jetzt"
			, "kann"
			, "kannst"
			, "kÃ¶nnen"
			, "kÃ¶nnt"
			, "machen"
			, "mein"
			, "meine"
			, "mit"
			, "muÃŸ"
			, "muÃŸt"
			, "musst"
			, "mÃ¼ssen"
			, "mÃ¼ÃŸt"
			, "nach"
			, "nachdem"
			, "nein"
			, "nicht"
			, "nun"
			, "oder"
			, "seid"
			, "sein"
			, "seine"
			, "sich"
			, "sie"
			, "sind"
			, "soll"
			, "sollen"
			, "sollst"
			, "sollt"
			, "sonst"
			, "soweit"
			, "sowie"
			, "und"
			, "unser"
			, "unsere"
			, "unter"
			, "vom"
			, "von"
			, "vor"
			, "wann"
			, "warum"
			, "was"
			, "weiter"
			, "weitere"
			, "wenn"
			, "wer"
			, "werde"
			, "werden"
			, "werdet"
			, "weshalb"
			, "wie"
			, "wieder"
			, "wieso"
			, "wir"
			, "wird"
			, "wirst"
			, "wo"
			, "woher"
			, "wohin"
			, "zu"
			, "zum"
			, "zur"
			, "Ã¼ber"
	};
	public static final String[] ENGLISH_STOPWORDS = {
			"i"
			,"me"
			,"my"
			,"myself"
			,"we"
			,"our"
			,"ours"
			,"ourselves"
			,"you"
			,"your"
			,"yours"
			,"yourself"
			,"yourselves"
			,"he"
			,"him"
			,"his"
			,"himself"
			,"she"
			,"her"
			,"hers"
			,"herself"
			,"it"
			,"its"
			,"itself"
			,"they"
			,"them"
			,"their"
			,"theirs"
			,"themselves"
			,"what"
			,"which"
			,"who"
			,"whom"
			,"this"
			,"that"
			,"these"
			,"those"
			,"am"
			,"is"
			,"are"
			,"was"
			,"were"
			,"be"
			,"been"
			,"being"
			,"have"
			,"has"
			,"had"
			,"having"
			,"do"
			,"does"
			,"did"
			,"doing"
			,"a"
			,"an"
			,"the"
			,"and"
			,"but"
			,"if"
			,"or"
			,"because"
			,"as"
			,"until"
			,"while"
			,"of"
			,"at"
			,"by"
			,"for"
			,"with"
			,"about"
			,"against"
			,"between"
			,"into"
			,"through"
			,"during"
			,"before"
			,"after"
			,"above"
			,"below"
			,"to"
			,"from"
			,"up"
			,"down"
			,"in"
			,"out"
			,"on"
			,"off"
			,"over"
			,"under"
			,"again"
			,"further"
			,"then"
			,"once"
			,"here"
			,"there"
			,"when"
			,"where"
			,"why"
			,"how"
			,"all"
			,"any"
			,"both"
			,"each"
			,"few"
			,"more"
			,"most"
			,"other"
			,"some"
			,"such"
			,"no"
			,"nor"
			,"not"
			,"only"
			,"own"
			,"same"
			,"so"
			,"than"
			,"too"
			,"very"
			,"s"
			,"t"
			,"can"
			,"will"
			,"just"
			,"don"
			,"should"
			,"now"
	};
	
	public static HashSet<String> get_DONG_DENG_STOPWORDS(){
		HashSet<String> ret = new HashSet<String>(DONG_DENG_STOPWORDS.length);
		for(String s : DONG_DENG_STOPWORDS) {
			ret.add(s);
		}
		return ret;
	}
	
	public static final String[] DONG_DENG_STOPWORDS = {
			"i"
			,"me"
			,"1"
			,"2"
			,"3"
			,"4"
			,"5"
			,"6"
			,"7"
			,"8"
			,"9"
			,"0"
			,"my"
			,"myself"
			,"we"
			,"our"
			,"ours"
			,"ourselves"
			,"you"
			,"your"
			,"yours"
			,"yourself"
			,"yourselves"
			,"he"
			,"him"
			,"his"
			,"himself"
			,"she"
			,"her"
			,"hers"
			,"herself"
			,"it"
			,"its"
			,"itself"
			,"they"
			,"them"
			,"their"
			,"theirs"
			,"themselves"
			,"what"
			,"which"
			,"who"
			,"whom"
			,"this"
			,"that"
			,"these"
			,"those"
			,"am"
			,"is"
			,"are"
			,"was"
			,"were"
			,"be"
			,"been"
			,"being"
			,"have"
			,"has"
			,"had"
			,"having"
			,"do"
			,"does"
			,"did"
			,"doing"
			,"a"
			,"an"
			,"the"
			,"and"
			,"but"
			,"if"
			,"or"
			,"because"
			,"as"
			,"until"
			,"while"
			,"of"
			,"at"
			,"by"
			,"for"
			,"with"
			,"about"
			,"against"
			,"between"
			,"into"
			,"through"
			,"during"
			,"before"
			,"after"
			,"above"
			,"below"
			,"to"
			,"from"
			,"up"
			,"down"
			,"in"
			,"out"
			,"on"
			,"off"
			,"over"
			,"under"
			,"again"
			,"further"
			,"then"
			,"once"
			,"here"
			,"there"
			,"when"
			,"where"
			,"why"
			,"how"
			,"all"
			,"any"
			,"both"
			,"each"
			,"few"
			,"more"
			,"most"
			,"other"
			,"some"
			,"such"
			,"no"
			,"nor"
			,"not"
			,"only"
			,"own"
			,"same"
			,"so"
			,"than"
			,"too"
			,"very"
			,"s"
			,"t"
			,"can"
			,"will"
			,"just"
			,"don"
			,"should"
			,"now"
	};
}
